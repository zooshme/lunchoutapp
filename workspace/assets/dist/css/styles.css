html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-weight: inherit;
  font-style: inherit;
  font-family: inherit;
  font-size: 100%;
  vertical-align: baseline;
}
body {
  line-height: 1;
  color: #000;
  background: #fff;
}
ol,
ul {
  list-style: none;
}
table {
  border-collapse: separate;
  border-spacing: 0;
  vertical-align: middle;
}
caption,
th,
td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}
a img {
  border: none;
}
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
summary,
main {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  display: block;
}
audio,
canvas,
video {
  display: inline-block;
  *display: inline;
  *zoom: 1;
}
audio:not([controls]),
[hidden] {
  display: none;
}
body {
  font-family: 'Whitney A', 'Whitney B', sans-serif;
}
h1,
h2 {
  font-family: 'Tungsten Rounded A', 'Tungsten Rounded B', sans-serif;
}
.page-title {
  margin-top: 1.875rem;
  margin-bottom: 1.875rem;
  font-size: 6.875rem;
  font-weight: 400;
  line-height: 6.875rem;
  display: block;
  margin-bottom: 0.625rem;
}
.page-title span {
  font-size: 2.625rem;
  line-height: 3.125rem;
  display: block;
  font-weight: 500;
  letter-spacing: 1px;
  word-spacing: 1px;
}
.page-description {
  font-size: 1.625rem;
  line-height: 2.1875rem;
  margin-bottom: 3.125rem;
}
.page-header {
  background-color: #d5c4ae;
  padding-top: 1.875rem;
  padding-bottom: 3.125rem;
}
.section-title {
  font-size: 1rem;
  font-weight: 600;
  line-height: 1.875rem;
  text-transform: uppercase;
  margin-bottom: 0.625rem;
}
.card-title {
  font-family: 'Tungsten Rounded A', 'Tungsten Rounded B', sans-serif;
  font-size: 2.625rem;
  font-weight: 500;
}
.container {
  max-width: 1270px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1.625rem;
  padding-right: 1.625rem;
}
.footer {
  position: fixed;
  width: 100%;
  bottom: 0;
  padding-top: 1.875rem;
  padding-bottom: 3.125rem;
  background-color: #000;
  color: #fff;
}
.is-centred {
  text-align: center;
}
.is-display-block {
  display: block;
  width: 100%;
}
.is-pulled-right {
  float: right;
}
.is-pulled-left {
  float: left;
}
.box {
  border: 1px solid #d5c4ae;
  border-radius: 12px;
  padding: 1.25rem 1.625rem;
}
.button {
  background-color: #ff9000;
  border: 0 none transparent;
  font-size: 1.625rem;
  line-height: 2.5rem;
  font-family: $bodyFont;
  color: #000;
  display: inline-block;
  padding: 0.3125rem 1.625rem 0.625rem;
  font-weight: 400;
  border-radius: 100px;
  text-decoration: none;
  cursor: pointer;
}
.button:hover {
  background-color: #000;
  color: #ff9000;
}
.button__small {
  background-color: #d5c4ae;
  font-size: 1rem;
  line-height: 1.875rem;
  padding: 0.375rem 1.625rem 0.5625rem;
  font-weight: 400;
}
.button__small:hover {
  background-color: #c3b19a;
  color: #000;
}
.sg-component {
  margin-top: 11.25rem;
  margin-bottom: 11.25rem;
}
.sg-component--name {
  font-family: 'Tungsten Rounded A', 'Tungsten Rounded B', sans-serif;
  font-size: 1.625rem;
  font-weight: 600;
  line-height: 1.875rem;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  word-spacing: 2px;
  margin-bottom: 1.25rem;
}
.sg-component--preview {
  margin-bottom: 1.25rem;
}
.bookings {
  padding-top: 1.875rem;
  padding-bottom: 3.125rem;
}
.bookings--list {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 1.875rem;
}
.bookings--item-date-and-time {
  margin-bottom: 0.625rem;
}
.bookings--item-restaurant-and-location {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-align: baseline;
  -moz-box-align: baseline;
  -o-box-align: baseline;
  -ms-flex-align: baseline;
  -webkit-align-items: baseline;
  align-items: baseline;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -o-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  margin-bottom: 1.875rem;
}
.bookings--item-restaurant {
  font-family: 'Tungsten Rounded A', 'Tungsten Rounded B', sans-serif;
  font-size: 2.625rem;
  font-weight: 500;
}
.header {
  background-color: #b19e85;
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}
.header .container {
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: box;
  display: flex;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -o-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
  -webkit-box-align: baseline;
  -moz-box-align: baseline;
  -o-box-align: baseline;
  -ms-flex-align: baseline;
  -webkit-align-items: baseline;
  align-items: baseline;
}
.logo {
  color: #000;
  font-family: 'Tungsten Rounded A', 'Tungsten Rounded B', sans-serif;
  font-size: 1.625rem;
  font-weight: 500;
  letter-spacing: 1px;
  text-decoration: none;
}
.navigation a {
  color: #000;
  text-decoration: none;
  margin-left: 1.625rem;
  font-weight: 500;
}
.restaurants--list {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 1.875rem;
}
.restaurants--item {
  background-color: #fff;
  padding: 1.25rem;
  border-radius: 12px;
}
.slots-table {
  width: 100%;
}
.slots-table--header {
  width: 100%;
}
.slots-table--header-cell {
  background-color: #b19e85;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
  color: #fff;
  vertical-align: bottom;
}
.slots-table--header-cell__table-number {
  width: 6.875rem;
}
.slots-table--header-cell__action {
  width: 11.25rem;
}
.slots-table--header-cell__hours {
  font-weight: 500;
  font-size: 1.625rem;
}
.slots-table--header-cell__minutes {
  font-size: 1rem;
  color: rgba(255,255,255,0.5);
}
.slots-table--body {
  width: 100%;
}
.slots-table--body-cell {
  border-bottom: 1px solid #d5c4ae;
}
.slots-table--body-cell__table-number {
  width: 6.875rem;
  font-weight: 500;
}
.slots-table--body-cell__table-number span {
  margin-left: auto;
  margin-right: auto;
  display: -webkit-box;
  display: -moz-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: box;
  display: flex;
  width: 1.875rem;
  height: 1.875rem;
  border-radius: 100px;
  border: 2px solid #000;
  -webkit-box-align: center;
  -moz-box-align: center;
  -o-box-align: center;
  -ms-flex-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  -o-box-pack: center;
  -ms-flex-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
}
.slots-table--body-cell__action {
  width: 11.25rem;
}
.slots-table--body-checkbox {
  display: none;
}
.slots-table--body-label {
  display: block;
  width: 100%;
}
.slots-table--body-check-area {
  display: block;
  width: 100%;
  height: 3.75rem;
}
.slots-table--body-checkbox:checked + .slots-table--body-check-area {
  background-color: #00dcff;
}
[data-language] code,
[class^="lang"] code,
pre [data-language],
pre [class^="lang"] {
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
  -webkit-animation: fade-in 50ms ease-in-out 2s forwards;
  -moz-animation: fade-in 50ms ease-in-out 2s forwards;
  -o-animation: fade-in 50ms ease-in-out 2s forwards;
  -ms-animation: fade-in 50ms ease-in-out 2s forwards;
  animation: fade-in 50ms ease-in-out 2s forwards;
}
[data-language] code.rainbow,
[class^="lang"] code.rainbow,
pre [data-language].rainbow,
pre [class^="lang"].rainbow {
  -webkit-animation: none;
  -moz-animation: none;
  -o-animation: none;
  -ms-animation: none;
  animation: none;
  -webkit-transition: opacity 50ms ease-in-out;
  -moz-transition: opacity 50ms ease-in-out;
  -o-transition: opacity 50ms ease-in-out;
  -ms-transition: opacity 50ms ease-in-out;
  transition: opacity 50ms ease-in-out;
}
[data-language] code.loading,
[class^="lang"] code.loading,
pre [data-language].loading,
pre [class^="lang"].loading {
  -webkit-animation: none;
  -moz-animation: none;
  -o-animation: none;
  -ms-animation: none;
  animation: none;
}
[data-language] code.rainbow-show,
[class^="lang"] code.rainbow-show,
pre [data-language].rainbow-show,
pre [class^="lang"].rainbow-show {
  opacity: 1;
  -ms-filter: none;
  filter: none;
}
pre {
  position: relative;
}
pre.loading .preloader div {
  -webkit-animation-play-state: running;
  -moz-animation-play-state: running;
  -o-animation-play-state: running;
  -ms-animation-play-state: running;
  animation-play-state: running;
}
pre.loading .preloader div:nth-of-type(1) {
  background: #0081f5;
  -webkit-animation: fade 1.5s 300ms linear infinite;
  -moz-animation: fade 1.5s 300ms linear infinite;
  -o-animation: fade 1.5s 300ms linear infinite;
  -ms-animation: fade 1.5s 300ms linear infinite;
  animation: fade 1.5s 300ms linear infinite;
}
pre.loading .preloader div:nth-of-type(2) {
  background: #5000f5;
  -webkit-animation: fade 1.5s 438ms linear infinite;
  -moz-animation: fade 1.5s 438ms linear infinite;
  -o-animation: fade 1.5s 438ms linear infinite;
  -ms-animation: fade 1.5s 438ms linear infinite;
  animation: fade 1.5s 438ms linear infinite;
}
pre.loading .preloader div:nth-of-type(3) {
  background: #9000f5;
  -webkit-animation: fade 1.5s 577ms linear infinite;
  -moz-animation: fade 1.5s 577ms linear infinite;
  -o-animation: fade 1.5s 577ms linear infinite;
  -ms-animation: fade 1.5s 577ms linear infinite;
  animation: fade 1.5s 577ms linear infinite;
}
pre.loading .preloader div:nth-of-type(4) {
  background: #f50419;
  -webkit-animation: fade 1.5s 715ms linear infinite;
  -moz-animation: fade 1.5s 715ms linear infinite;
  -o-animation: fade 1.5s 715ms linear infinite;
  -ms-animation: fade 1.5s 715ms linear infinite;
  animation: fade 1.5s 715ms linear infinite;
}
pre.loading .preloader div:nth-of-type(5) {
  background: #f57900;
  -webkit-animation: fade 1.5s 853ms linear infinite;
  -moz-animation: fade 1.5s 853ms linear infinite;
  -o-animation: fade 1.5s 853ms linear infinite;
  -ms-animation: fade 1.5s 853ms linear infinite;
  animation: fade 1.5s 853ms linear infinite;
}
pre.loading .preloader div:nth-of-type(6) {
  background: #f5e600;
  -webkit-animation: fade 1.5s 992ms linear infinite;
  -moz-animation: fade 1.5s 992ms linear infinite;
  -o-animation: fade 1.5s 992ms linear infinite;
  -ms-animation: fade 1.5s 992ms linear infinite;
  animation: fade 1.5s 992ms linear infinite;
}
pre.loading .preloader div:nth-of-type(7) {
  background: #00f50c;
  -webkit-animation: fade 1.5s 1130ms linear infinite;
  -moz-animation: fade 1.5s 1130ms linear infinite;
  -o-animation: fade 1.5s 1130ms linear infinite;
  -ms-animation: fade 1.5s 1130ms linear infinite;
  animation: fade 1.5s 1130ms linear infinite;
}
pre .preloader {
  position: absolute;
  top: 12px;
  left: 10px;
}
pre .preloader div {
  width: 12px;
  height: 12px;
  border-radius: 4px;
  display: inline-block;
  margin-right: 4px;
  opacity: 0;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
  filter: alpha(opacity=0);
  -webkit-animation-play-state: paused;
  -moz-animation-play-state: paused;
  -o-animation-play-state: paused;
  -ms-animation-play-state: paused;
  animation-play-state: paused;
  -webkit-animation-fill-mode: forwards;
  -moz-animation-fill-mode: forwards;
  -o-animation-fill-mode: forwards;
  -ms-animation-fill-mode: forwards;
  animation-fill-mode: forwards;
}
pre {
  background-color: #000;
  word-wrap: break-word;
  margin: 0px;
  padding: 10px;
  color: #fff;
  font-size: 14px;
  margin-bottom: 20px;
}
pre,
code {
  font-family: 'Monaco', 'Menlo', courier, monospace;
}
pre {
  background-color: #000;
  color: #d5c4ae;
  padding: 1.25rem;
  border-radius: 12px;
  font-size: 1rem;
  line-height: 1.5625rem;
}
pre .support.class,
pre .support.type {
  color: #6d79de;
}
pre .support.constant {
  color: #00af0e;
}
pre .constant.language {
  color: #585cf6;
}
pre .support.function {
  font-weight: bold;
  color: #7290d9;
}
pre .string {
  color: #049b0a;
}
pre .constant.numeric {
  color: #44aa43;
}
pre .keyword,
pre .storage {
  color: #43a8ed;
}
pre .entity.function {
  color: #ff9358;
}
pre .comment {
  color: #06f;
  font-style: italic;
}
pre .constant.symbol {
  color: #c5656b;
}
pre .variable.instance,
pre .variable.language,
pre .constant {
  color: #318495;
}
@-moz-keyframes fade-in {
  0% {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  100% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@-webkit-keyframes fade-in {
  0% {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  100% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@-o-keyframes fade-in {
  0% {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  100% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@keyframes fade-in {
  0% {
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
  100% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
}
@-moz-keyframes fade {
  10% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  35% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  40% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  50% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
  60% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  100% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
}
@-webkit-keyframes fade {
  10% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  35% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  40% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  50% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
  60% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  100% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
}
@-o-keyframes fade {
  10% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  35% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  40% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  50% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
  60% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  100% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
}
@keyframes fade {
  10% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  35% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  40% {
    -webkit-transform: scale(1, 1.7);
    -moz-transform: scale(1, 1.7);
    -o-transform: scale(1, 1.7);
    -ms-transform: scale(1, 1.7);
    transform: scale(1, 1.7);
  }
  50% {
    opacity: 1;
    -ms-filter: none;
    filter: none;
  }
  60% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
  }
  100% {
    -webkit-transform: scale(1, 1);
    -moz-transform: scale(1, 1);
    -o-transform: scale(1, 1);
    -ms-transform: scale(1, 1);
    transform: scale(1, 1);
    opacity: 0;
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=0)";
    filter: alpha(opacity=0);
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
